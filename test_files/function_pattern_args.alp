module function_pattern_args

export is_zero/1, both_zero/2, make_xy/2, make_y/1, get_x/1, get_opt_x/1

export double_maybe_x/1, doubler/1

let is_zero 0 = true
let is_zero x = false
let both_zero 0 0 = true
let both_zero x y = false
let make_xy x y = {x=x, y=y}
let make_y y = {y=y}
let get_x {x=x} = x

type option 'a = None | Some 'a

let get_opt_x {x=x} = Some x
let get_opt_x {} = None
let my_map f None = None
let my_map f (Some a) = Some (f a)

let double x = x * x
let doubler x = my_map double (Some x)

let double_maybe_x rec = my_map double (get_opt_x rec)

{-
 Mimics an issue I ran into working with elli and relatively specific pattern
 matches.  Underscores/wildcards weren't getting renamed correctly due to the
 code generator's environment changes being ignored when making patterns.
 -}
let handle_event :a b _ = :ok
let handle_event _ _ _ = :whatever
